Terminals unused in grammar

    ERROR


문법

    0 $accept: program $end

    1 program: dcl_list

    2 dcl_list: dcl_list dcl
    3         | dcl

    4 dcl: var_dcl
    5    | fun_dcl

    6 $@1: %empty

    7 var_dcl: type_spec ID $@1 SEMI

    8 $@2: %empty

    9 $@3: %empty

   10 var_dcl: type_spec ID $@2 LBRACE NUM $@3 RBRACE SEMI

   11 type_spec: INT
   12          | VOID

   13 $@4: %empty

   14 fun_dcl: type_spec ID $@4 LPAREN params RPAREN cmpnd_stmt

   15 params: param_list
   16       | VOID

   17 param_list: param_list COMMA param
   18           | param

   19 param: type_spec ID

   20 $@5: %empty

   21 param: type_spec ID $@5 LBRACE RBRACE

   22 cmpnd_stmt: LCURLY local_dcls stmt_list RCURLY

   23 local_dcls: local_dcls var_dcl
   24           | %empty

   25 stmt_list: stmt_list_
   26          | %empty

   27 stmt_list_: stmt_list_ SEMI stmt
   28           | stmt

   29 stmt: select_stmt
   30     | exp_stmt
   31     | cmpnd_stmt
   32     | iter_stmt
   33     | return_stmt

   34 exp_stmt: exp SEMI
   35         | SEMI

   36 select_stmt: IF LPAREN exp RPAREN stmt
   37            | IF LPAREN exp RPAREN stmt ELSE stmt

   38 iter_stmt: WHILE LPAREN exp RPAREN stmt

   39 return_stmt: RETURN SEMI
   40            | RETURN exp SEMI

   41 exp: var ASSIGN exp
   42    | simple_exp

   43 var: ID

   44 $@6: %empty

   45 var: ID $@6 LBRACE exp RBRACE

   46 simple_exp: addt_exp relop addt_exp
   47           | addt_exp

   48 relop: LE
   49      | LT
   50      | GT
   51      | GE
   52      | EQ
   53      | NE

   54 addt_exp: addt_exp addop term
   55         | term

   56 addop: PLUS
   57      | MINUS

   58 term: term mulop factor
   59     | factor

   60 mulop: TIMES
   61      | OVER

   62 factor: LPAREN exp RPAREN
   63       | var
   64       | call
   65       | NUM

   66 $@7: %empty

   67 call: ID $@7 LPAREN args RPAREN

   68 args: arg_list
   69     | %empty

   70 arg_list: arg_list COMMA exp
   71         | exp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 36 37
    ELSE (259) 37
    RETURN (260) 39 40
    WHILE (261) 38
    INT (262) 11
    VOID (263) 12 16
    PLUS (264) 56
    MINUS (265) 57
    TIMES (266) 60
    OVER (267) 61
    EQ (268) 52
    NE (269) 53
    LT (270) 49
    LE (271) 48
    GT (272) 50
    GE (273) 51
    ASSIGN (274) 41
    LPAREN (275) 14 36 37 38 62 67
    RPAREN (276) 14 36 37 38 62 67
    LBRACE (277) 10 21 45
    RBRACE (278) 10 21 45
    LCURLY (279) 22
    RCURLY (280) 22
    SEMI (281) 7 10 27 34 35 39 40
    COMMA (282) 17 70
    ID (283) 7 10 14 19 21 43 45 67
    NUM (284) 10 65
    ERROR (285)
    IFX (286)


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program (33)
        on left: 1
        on right: 0
    dcl_list (34)
        on left: 2 3
        on right: 1 2
    dcl (35)
        on left: 4 5
        on right: 2 3
    var_dcl (36)
        on left: 7 10
        on right: 4 23
    $@1 (37)
        on left: 6
        on right: 7
    $@2 (38)
        on left: 8
        on right: 10
    $@3 (39)
        on left: 9
        on right: 10
    type_spec (40)
        on left: 11 12
        on right: 7 10 14 19 21
    fun_dcl (41)
        on left: 14
        on right: 5
    $@4 (42)
        on left: 13
        on right: 14
    params (43)
        on left: 15 16
        on right: 14
    param_list (44)
        on left: 17 18
        on right: 15 17
    param (45)
        on left: 19 21
        on right: 17 18
    $@5 (46)
        on left: 20
        on right: 21
    cmpnd_stmt (47)
        on left: 22
        on right: 14 31
    local_dcls (48)
        on left: 23 24
        on right: 22 23
    stmt_list (49)
        on left: 25 26
        on right: 22
    stmt_list_ (50)
        on left: 27 28
        on right: 25 27
    stmt (51)
        on left: 29 30 31 32 33
        on right: 27 28 36 37 38
    exp_stmt (52)
        on left: 34 35
        on right: 30
    select_stmt (53)
        on left: 36 37
        on right: 29
    iter_stmt (54)
        on left: 38
        on right: 32
    return_stmt (55)
        on left: 39 40
        on right: 33
    exp (56)
        on left: 41 42
        on right: 34 36 37 38 40 41 45 62 70 71
    var (57)
        on left: 43 45
        on right: 41 63
    $@6 (58)
        on left: 44
        on right: 45
    simple_exp (59)
        on left: 46 47
        on right: 42
    relop (60)
        on left: 48 49 50 51 52 53
        on right: 46
    addt_exp (61)
        on left: 54 55
        on right: 46 47 54
    addop (62)
        on left: 56 57
        on right: 54
    term (63)
        on left: 58 59
        on right: 54 55 58
    mulop (64)
        on left: 60 61
        on right: 58
    factor (65)
        on left: 62 63 64 65
        on right: 58 59
    call (66)
        on left: 67
        on right: 64
    $@7 (67)
        on left: 66
        on right: 67
    args (68)
        on left: 68 69
        on right: 67
    arg_list (69)
        on left: 70 71
        on right: 68 70


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program    go to state 3
    dcl_list   go to state 4
    dcl        go to state 5
    var_dcl    go to state 6
    type_spec  go to state 7
    fun_dcl    go to state 8


State 1

   11 type_spec: INT .

    $default  reduce using rule 11 (type_spec)


State 2

   12 type_spec: VOID .

    $default  reduce using rule 12 (type_spec)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: dcl_list .
    2 dcl_list: dcl_list . dcl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    dcl        go to state 10
    var_dcl    go to state 6
    type_spec  go to state 7
    fun_dcl    go to state 8


State 5

    3 dcl_list: dcl .

    $default  reduce using rule 3 (dcl_list)


State 6

    4 dcl: var_dcl .

    $default  reduce using rule 4 (dcl)


State 7

    7 var_dcl: type_spec . ID $@1 SEMI
   10        | type_spec . ID $@2 LBRACE NUM $@3 RBRACE SEMI
   14 fun_dcl: type_spec . ID $@4 LPAREN params RPAREN cmpnd_stmt

    ID  shift, and go to state 11


State 8

    5 dcl: fun_dcl .

    $default  reduce using rule 5 (dcl)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 dcl_list: dcl_list dcl .

    $default  reduce using rule 2 (dcl_list)


State 11

    7 var_dcl: type_spec ID . $@1 SEMI
   10        | type_spec ID . $@2 LBRACE NUM $@3 RBRACE SEMI
   14 fun_dcl: type_spec ID . $@4 LPAREN params RPAREN cmpnd_stmt

    LPAREN    reduce using rule 13 ($@4)
    LBRACE    reduce using rule 8 ($@2)
    $default  reduce using rule 6 ($@1)

    $@1  go to state 12
    $@2  go to state 13
    $@4  go to state 14


State 12

    7 var_dcl: type_spec ID $@1 . SEMI

    SEMI  shift, and go to state 15


State 13

   10 var_dcl: type_spec ID $@2 . LBRACE NUM $@3 RBRACE SEMI

    LBRACE  shift, and go to state 16


State 14

   14 fun_dcl: type_spec ID $@4 . LPAREN params RPAREN cmpnd_stmt

    LPAREN  shift, and go to state 17


State 15

    7 var_dcl: type_spec ID $@1 SEMI .

    $default  reduce using rule 7 (var_dcl)


State 16

   10 var_dcl: type_spec ID $@2 LBRACE . NUM $@3 RBRACE SEMI

    NUM  shift, and go to state 18


State 17

   14 fun_dcl: type_spec ID $@4 LPAREN . params RPAREN cmpnd_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 19

    type_spec   go to state 20
    params      go to state 21
    param_list  go to state 22
    param       go to state 23


State 18

   10 var_dcl: type_spec ID $@2 LBRACE NUM . $@3 RBRACE SEMI

    $default  reduce using rule 9 ($@3)

    $@3  go to state 24


State 19

   12 type_spec: VOID .
   16 params: VOID .

    RPAREN    reduce using rule 16 (params)
    $default  reduce using rule 12 (type_spec)


State 20

   19 param: type_spec . ID
   21      | type_spec . ID $@5 LBRACE RBRACE

    ID  shift, and go to state 25


State 21

   14 fun_dcl: type_spec ID $@4 LPAREN params . RPAREN cmpnd_stmt

    RPAREN  shift, and go to state 26


State 22

   15 params: param_list .
   17 param_list: param_list . COMMA param

    COMMA  shift, and go to state 27

    $default  reduce using rule 15 (params)


State 23

   18 param_list: param .

    $default  reduce using rule 18 (param_list)


State 24

   10 var_dcl: type_spec ID $@2 LBRACE NUM $@3 . RBRACE SEMI

    RBRACE  shift, and go to state 28


State 25

   19 param: type_spec ID .
   21      | type_spec ID . $@5 LBRACE RBRACE

    LBRACE    reduce using rule 20 ($@5)
    $default  reduce using rule 19 (param)

    $@5  go to state 29


State 26

   14 fun_dcl: type_spec ID $@4 LPAREN params RPAREN . cmpnd_stmt

    LCURLY  shift, and go to state 30

    cmpnd_stmt  go to state 31


State 27

   17 param_list: param_list COMMA . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_spec  go to state 20
    param      go to state 32


State 28

   10 var_dcl: type_spec ID $@2 LBRACE NUM $@3 RBRACE . SEMI

    SEMI  shift, and go to state 33


State 29

   21 param: type_spec ID $@5 . LBRACE RBRACE

    LBRACE  shift, and go to state 34


State 30

   22 cmpnd_stmt: LCURLY . local_dcls stmt_list RCURLY

    $default  reduce using rule 24 (local_dcls)

    local_dcls  go to state 35


State 31

   14 fun_dcl: type_spec ID $@4 LPAREN params RPAREN cmpnd_stmt .

    $default  reduce using rule 14 (fun_dcl)


State 32

   17 param_list: param_list COMMA param .

    $default  reduce using rule 17 (param_list)


State 33

   10 var_dcl: type_spec ID $@2 LBRACE NUM $@3 RBRACE SEMI .

    $default  reduce using rule 10 (var_dcl)


State 34

   21 param: type_spec ID $@5 LBRACE . RBRACE

    RBRACE  shift, and go to state 36


State 35

   22 cmpnd_stmt: LCURLY local_dcls . stmt_list RCURLY
   23 local_dcls: local_dcls . var_dcl

    IF      shift, and go to state 37
    RETURN  shift, and go to state 38
    WHILE   shift, and go to state 39
    INT     shift, and go to state 1
    VOID    shift, and go to state 2
    LPAREN  shift, and go to state 40
    LCURLY  shift, and go to state 30
    SEMI    shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    $default  reduce using rule 26 (stmt_list)

    var_dcl      go to state 44
    type_spec    go to state 45
    cmpnd_stmt   go to state 46
    stmt_list    go to state 47
    stmt_list_   go to state 48
    stmt         go to state 49
    exp_stmt     go to state 50
    select_stmt  go to state 51
    iter_stmt    go to state 52
    return_stmt  go to state 53
    exp          go to state 54
    var          go to state 55
    simple_exp   go to state 56
    addt_exp     go to state 57
    term         go to state 58
    factor       go to state 59
    call         go to state 60


State 36

   21 param: type_spec ID $@5 LBRACE RBRACE .

    $default  reduce using rule 21 (param)


State 37

   36 select_stmt: IF . LPAREN exp RPAREN stmt
   37            | IF . LPAREN exp RPAREN stmt ELSE stmt

    LPAREN  shift, and go to state 61


State 38

   39 return_stmt: RETURN . SEMI
   40            | RETURN . exp SEMI

    LPAREN  shift, and go to state 40
    SEMI    shift, and go to state 62
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    exp         go to state 63
    var         go to state 55
    simple_exp  go to state 56
    addt_exp    go to state 57
    term        go to state 58
    factor      go to state 59
    call        go to state 60


State 39

   38 iter_stmt: WHILE . LPAREN exp RPAREN stmt

    LPAREN  shift, and go to state 64


State 40

   62 factor: LPAREN . exp RPAREN

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    exp         go to state 65
    var         go to state 55
    simple_exp  go to state 56
    addt_exp    go to state 57
    term        go to state 58
    factor      go to state 59
    call        go to state 60


State 41

   35 exp_stmt: SEMI .

    $default  reduce using rule 35 (exp_stmt)


State 42

   43 var: ID .
   45    | ID . $@6 LBRACE exp RBRACE
   67 call: ID . $@7 LPAREN args RPAREN

    LPAREN    reduce using rule 66 ($@7)
    LBRACE    reduce using rule 44 ($@6)
    $default  reduce using rule 43 (var)

    $@6  go to state 66
    $@7  go to state 67


State 43

   65 factor: NUM .

    $default  reduce using rule 65 (factor)


State 44

   23 local_dcls: local_dcls var_dcl .

    $default  reduce using rule 23 (local_dcls)


State 45

    7 var_dcl: type_spec . ID $@1 SEMI
   10        | type_spec . ID $@2 LBRACE NUM $@3 RBRACE SEMI

    ID  shift, and go to state 68


State 46

   31 stmt: cmpnd_stmt .

    $default  reduce using rule 31 (stmt)


State 47

   22 cmpnd_stmt: LCURLY local_dcls stmt_list . RCURLY

    RCURLY  shift, and go to state 69


State 48

   25 stmt_list: stmt_list_ .
   27 stmt_list_: stmt_list_ . SEMI stmt

    SEMI  shift, and go to state 70

    $default  reduce using rule 25 (stmt_list)


State 49

   28 stmt_list_: stmt .

    $default  reduce using rule 28 (stmt_list_)


State 50

   30 stmt: exp_stmt .

    $default  reduce using rule 30 (stmt)


State 51

   29 stmt: select_stmt .

    $default  reduce using rule 29 (stmt)


State 52

   32 stmt: iter_stmt .

    $default  reduce using rule 32 (stmt)


State 53

   33 stmt: return_stmt .

    $default  reduce using rule 33 (stmt)


State 54

   34 exp_stmt: exp . SEMI

    SEMI  shift, and go to state 71


State 55

   41 exp: var . ASSIGN exp
   63 factor: var .

    ASSIGN  shift, and go to state 72

    $default  reduce using rule 63 (factor)


State 56

   42 exp: simple_exp .

    $default  reduce using rule 42 (exp)


State 57

   46 simple_exp: addt_exp . relop addt_exp
   47           | addt_exp .
   54 addt_exp: addt_exp . addop term

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74
    EQ     shift, and go to state 75
    NE     shift, and go to state 76
    LT     shift, and go to state 77
    LE     shift, and go to state 78
    GT     shift, and go to state 79
    GE     shift, and go to state 80

    $default  reduce using rule 47 (simple_exp)

    relop  go to state 81
    addop  go to state 82


State 58

   55 addt_exp: term .
   58 term: term . mulop factor

    TIMES  shift, and go to state 83
    OVER   shift, and go to state 84

    $default  reduce using rule 55 (addt_exp)

    mulop  go to state 85


State 59

   59 term: factor .

    $default  reduce using rule 59 (term)


State 60

   64 factor: call .

    $default  reduce using rule 64 (factor)


State 61

   36 select_stmt: IF LPAREN . exp RPAREN stmt
   37            | IF LPAREN . exp RPAREN stmt ELSE stmt

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    exp         go to state 86
    var         go to state 55
    simple_exp  go to state 56
    addt_exp    go to state 57
    term        go to state 58
    factor      go to state 59
    call        go to state 60


State 62

   39 return_stmt: RETURN SEMI .

    $default  reduce using rule 39 (return_stmt)


State 63

   40 return_stmt: RETURN exp . SEMI

    SEMI  shift, and go to state 87


State 64

   38 iter_stmt: WHILE LPAREN . exp RPAREN stmt

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    exp         go to state 88
    var         go to state 55
    simple_exp  go to state 56
    addt_exp    go to state 57
    term        go to state 58
    factor      go to state 59
    call        go to state 60


State 65

   62 factor: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 89


State 66

   45 var: ID $@6 . LBRACE exp RBRACE

    LBRACE  shift, and go to state 90


State 67

   67 call: ID $@7 . LPAREN args RPAREN

    LPAREN  shift, and go to state 91


State 68

    7 var_dcl: type_spec ID . $@1 SEMI
   10        | type_spec ID . $@2 LBRACE NUM $@3 RBRACE SEMI

    LBRACE    reduce using rule 8 ($@2)
    $default  reduce using rule 6 ($@1)

    $@1  go to state 12
    $@2  go to state 13


State 69

   22 cmpnd_stmt: LCURLY local_dcls stmt_list RCURLY .

    $default  reduce using rule 22 (cmpnd_stmt)


State 70

   27 stmt_list_: stmt_list_ SEMI . stmt

    IF      shift, and go to state 37
    RETURN  shift, and go to state 38
    WHILE   shift, and go to state 39
    LPAREN  shift, and go to state 40
    LCURLY  shift, and go to state 30
    SEMI    shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    cmpnd_stmt   go to state 46
    stmt         go to state 92
    exp_stmt     go to state 50
    select_stmt  go to state 51
    iter_stmt    go to state 52
    return_stmt  go to state 53
    exp          go to state 54
    var          go to state 55
    simple_exp   go to state 56
    addt_exp     go to state 57
    term         go to state 58
    factor       go to state 59
    call         go to state 60


State 71

   34 exp_stmt: exp SEMI .

    $default  reduce using rule 34 (exp_stmt)


State 72

   41 exp: var ASSIGN . exp

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    exp         go to state 93
    var         go to state 55
    simple_exp  go to state 56
    addt_exp    go to state 57
    term        go to state 58
    factor      go to state 59
    call        go to state 60


State 73

   56 addop: PLUS .

    $default  reduce using rule 56 (addop)


State 74

   57 addop: MINUS .

    $default  reduce using rule 57 (addop)


State 75

   52 relop: EQ .

    $default  reduce using rule 52 (relop)


State 76

   53 relop: NE .

    $default  reduce using rule 53 (relop)


State 77

   49 relop: LT .

    $default  reduce using rule 49 (relop)


State 78

   48 relop: LE .

    $default  reduce using rule 48 (relop)


State 79

   50 relop: GT .

    $default  reduce using rule 50 (relop)


State 80

   51 relop: GE .

    $default  reduce using rule 51 (relop)


State 81

   46 simple_exp: addt_exp relop . addt_exp

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    var       go to state 94
    addt_exp  go to state 95
    term      go to state 58
    factor    go to state 59
    call      go to state 60


State 82

   54 addt_exp: addt_exp addop . term

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    var     go to state 94
    term    go to state 96
    factor  go to state 59
    call    go to state 60


State 83

   60 mulop: TIMES .

    $default  reduce using rule 60 (mulop)


State 84

   61 mulop: OVER .

    $default  reduce using rule 61 (mulop)


State 85

   58 term: term mulop . factor

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    var     go to state 94
    factor  go to state 97
    call    go to state 60


State 86

   36 select_stmt: IF LPAREN exp . RPAREN stmt
   37            | IF LPAREN exp . RPAREN stmt ELSE stmt

    RPAREN  shift, and go to state 98


State 87

   40 return_stmt: RETURN exp SEMI .

    $default  reduce using rule 40 (return_stmt)


State 88

   38 iter_stmt: WHILE LPAREN exp . RPAREN stmt

    RPAREN  shift, and go to state 99


State 89

   62 factor: LPAREN exp RPAREN .

    $default  reduce using rule 62 (factor)


State 90

   45 var: ID $@6 LBRACE . exp RBRACE

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    exp         go to state 100
    var         go to state 55
    simple_exp  go to state 56
    addt_exp    go to state 57
    term        go to state 58
    factor      go to state 59
    call        go to state 60


State 91

   67 call: ID $@7 LPAREN . args RPAREN

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    $default  reduce using rule 69 (args)

    exp         go to state 101
    var         go to state 55
    simple_exp  go to state 56
    addt_exp    go to state 57
    term        go to state 58
    factor      go to state 59
    call        go to state 60
    args        go to state 102
    arg_list    go to state 103


State 92

   27 stmt_list_: stmt_list_ SEMI stmt .

    $default  reduce using rule 27 (stmt_list_)


State 93

   41 exp: var ASSIGN exp .

    $default  reduce using rule 41 (exp)


State 94

   63 factor: var .

    $default  reduce using rule 63 (factor)


State 95

   46 simple_exp: addt_exp relop addt_exp .
   54 addt_exp: addt_exp . addop term

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    $default  reduce using rule 46 (simple_exp)

    addop  go to state 82


State 96

   54 addt_exp: addt_exp addop term .
   58 term: term . mulop factor

    TIMES  shift, and go to state 83
    OVER   shift, and go to state 84

    $default  reduce using rule 54 (addt_exp)

    mulop  go to state 85


State 97

   58 term: term mulop factor .

    $default  reduce using rule 58 (term)


State 98

   36 select_stmt: IF LPAREN exp RPAREN . stmt
   37            | IF LPAREN exp RPAREN . stmt ELSE stmt

    IF      shift, and go to state 37
    RETURN  shift, and go to state 38
    WHILE   shift, and go to state 39
    LPAREN  shift, and go to state 40
    LCURLY  shift, and go to state 30
    SEMI    shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    cmpnd_stmt   go to state 46
    stmt         go to state 104
    exp_stmt     go to state 50
    select_stmt  go to state 51
    iter_stmt    go to state 52
    return_stmt  go to state 53
    exp          go to state 54
    var          go to state 55
    simple_exp   go to state 56
    addt_exp     go to state 57
    term         go to state 58
    factor       go to state 59
    call         go to state 60


State 99

   38 iter_stmt: WHILE LPAREN exp RPAREN . stmt

    IF      shift, and go to state 37
    RETURN  shift, and go to state 38
    WHILE   shift, and go to state 39
    LPAREN  shift, and go to state 40
    LCURLY  shift, and go to state 30
    SEMI    shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    cmpnd_stmt   go to state 46
    stmt         go to state 105
    exp_stmt     go to state 50
    select_stmt  go to state 51
    iter_stmt    go to state 52
    return_stmt  go to state 53
    exp          go to state 54
    var          go to state 55
    simple_exp   go to state 56
    addt_exp     go to state 57
    term         go to state 58
    factor       go to state 59
    call         go to state 60


State 100

   45 var: ID $@6 LBRACE exp . RBRACE

    RBRACE  shift, and go to state 106


State 101

   71 arg_list: exp .

    $default  reduce using rule 71 (arg_list)


State 102

   67 call: ID $@7 LPAREN args . RPAREN

    RPAREN  shift, and go to state 107


State 103

   68 args: arg_list .
   70 arg_list: arg_list . COMMA exp

    COMMA  shift, and go to state 108

    $default  reduce using rule 68 (args)


State 104

   36 select_stmt: IF LPAREN exp RPAREN stmt .
   37            | IF LPAREN exp RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 109

    $default  reduce using rule 36 (select_stmt)


State 105

   38 iter_stmt: WHILE LPAREN exp RPAREN stmt .

    $default  reduce using rule 38 (iter_stmt)


State 106

   45 var: ID $@6 LBRACE exp RBRACE .

    $default  reduce using rule 45 (var)


State 107

   67 call: ID $@7 LPAREN args RPAREN .

    $default  reduce using rule 67 (call)


State 108

   70 arg_list: arg_list COMMA . exp

    LPAREN  shift, and go to state 40
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    exp         go to state 110
    var         go to state 55
    simple_exp  go to state 56
    addt_exp    go to state 57
    term        go to state 58
    factor      go to state 59
    call        go to state 60


State 109

   37 select_stmt: IF LPAREN exp RPAREN stmt ELSE . stmt

    IF      shift, and go to state 37
    RETURN  shift, and go to state 38
    WHILE   shift, and go to state 39
    LPAREN  shift, and go to state 40
    LCURLY  shift, and go to state 30
    SEMI    shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43

    cmpnd_stmt   go to state 46
    stmt         go to state 111
    exp_stmt     go to state 50
    select_stmt  go to state 51
    iter_stmt    go to state 52
    return_stmt  go to state 53
    exp          go to state 54
    var          go to state 55
    simple_exp   go to state 56
    addt_exp     go to state 57
    term         go to state 58
    factor       go to state 59
    call         go to state 60


State 110

   70 arg_list: arg_list COMMA exp .

    $default  reduce using rule 70 (arg_list)


State 111

   37 select_stmt: IF LPAREN exp RPAREN stmt ELSE stmt .

    $default  reduce using rule 37 (select_stmt)
