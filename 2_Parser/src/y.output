Terminals unused in grammar

    ERROR


State 1 충돌: 1 쉬프트/리듀스
State 2 충돌: 1 쉬프트/리듀스


문법

    0 $accept: program $end

    1 program: dcl_list

    2 dcl_list: dcl_list dcl
    3         | dcl

    4 dcl: var_dcl
    5    | fun_dcl

    6 var_dcl: nv_dcl SEMI
    7        | arr_dcl SEMI

    8 prim_dcl: INT ID
    9         | VOID ID

   10 nv_dcl: prim_dcl

   11 $@1: %empty

   12 arr_dcl: prim_dcl LBRACE NUM $@1 RBRACE

   13 type_spec: INT
   14          | VOID

   15 $@2: %empty

   16 fun_dcl: type_spec ID $@2 LPAREN params RPAREN cmpnd_stmt

   17 params: param_list
   18       | VOID

   19 param_list: param_list COMMA param
   20           | param

   21 param: type_spec ID

   22 $@3: %empty

   23 param: type_spec ID $@3 LBRACE RBRACE

   24 cmpnd_stmt: LCURLY local_dcls stmt_list RCURLY

   25 local_dcls: local_dcls var_dcl
   26           | %empty

   27 stmt_list: stmt_list_
   28          | %empty

   29 stmt_list_: stmt_list_ stmt
   30           | stmt

   31 stmt: select_stmt
   32     | exp_stmt
   33     | cmpnd_stmt
   34     | iter_stmt
   35     | return_stmt

   36 exp_stmt: exp SEMI
   37         | SEMI

   38 select_stmt: IF LPAREN exp RPAREN stmt
   39            | IF LPAREN exp RPAREN stmt ELSE stmt

   40 iter_stmt: WHILE LPAREN exp RPAREN stmt

   41 return_stmt: RETURN SEMI
   42            | RETURN exp SEMI

   43 exp: var ASSIGN exp
   44    | simple_exp

   45 var: ID

   46 $@4: %empty

   47 var: ID $@4 LBRACE exp RBRACE

   48 simple_exp: addt_exp relop addt_exp
   49           | addt_exp

   50 relop: LE
   51      | LT
   52      | GT
   53      | GE
   54      | EQ
   55      | NE

   56 addt_exp: addt_exp addop term
   57         | term

   58 addop: PLUS
   59      | MINUS

   60 term: term mulop factor
   61     | factor

   62 mulop: TIMES
   63      | OVER

   64 factor: LPAREN exp RPAREN
   65       | var
   66       | call
   67       | NUM

   68 $@5: %empty

   69 call: ID $@5 LPAREN args RPAREN

   70 args: arg_list
   71     | %empty

   72 arg_list: arg_list COMMA exp
   73         | exp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 38 39
    ELSE (259) 39
    RETURN (260) 41 42
    WHILE (261) 40
    INT (262) 8 13
    VOID (263) 9 14 18
    PLUS (264) 58
    MINUS (265) 59
    TIMES (266) 62
    OVER (267) 63
    EQ (268) 54
    NE (269) 55
    LT (270) 51
    LE (271) 50
    GT (272) 52
    GE (273) 53
    ASSIGN (274) 43
    LPAREN (275) 16 38 39 40 64 69
    RPAREN (276) 16 38 39 40 64 69
    LBRACE (277) 12 23 47
    RBRACE (278) 12 23 47
    LCURLY (279) 24
    RCURLY (280) 24
    SEMI (281) 6 7 36 37 41 42
    COMMA (282) 19 72
    ID (283) 8 9 16 21 23 45 47 69
    NUM (284) 12 67
    ERROR (285)
    IFX (286)


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program (33)
        on left: 1
        on right: 0
    dcl_list (34)
        on left: 2 3
        on right: 1 2
    dcl (35)
        on left: 4 5
        on right: 2 3
    var_dcl (36)
        on left: 6 7
        on right: 4 25
    prim_dcl (37)
        on left: 8 9
        on right: 10 12
    nv_dcl (38)
        on left: 10
        on right: 6
    arr_dcl (39)
        on left: 12
        on right: 7
    $@1 (40)
        on left: 11
        on right: 12
    type_spec (41)
        on left: 13 14
        on right: 16 21 23
    fun_dcl (42)
        on left: 16
        on right: 5
    $@2 (43)
        on left: 15
        on right: 16
    params (44)
        on left: 17 18
        on right: 16
    param_list (45)
        on left: 19 20
        on right: 17 19
    param (46)
        on left: 21 23
        on right: 19 20
    $@3 (47)
        on left: 22
        on right: 23
    cmpnd_stmt (48)
        on left: 24
        on right: 16 33
    local_dcls (49)
        on left: 25 26
        on right: 24 25
    stmt_list (50)
        on left: 27 28
        on right: 24
    stmt_list_ (51)
        on left: 29 30
        on right: 27 29
    stmt (52)
        on left: 31 32 33 34 35
        on right: 29 30 38 39 40
    exp_stmt (53)
        on left: 36 37
        on right: 32
    select_stmt (54)
        on left: 38 39
        on right: 31
    iter_stmt (55)
        on left: 40
        on right: 34
    return_stmt (56)
        on left: 41 42
        on right: 35
    exp (57)
        on left: 43 44
        on right: 36 38 39 40 42 43 47 64 72 73
    var (58)
        on left: 45 47
        on right: 43 65
    $@4 (59)
        on left: 46
        on right: 47
    simple_exp (60)
        on left: 48 49
        on right: 44
    relop (61)
        on left: 50 51 52 53 54 55
        on right: 48
    addt_exp (62)
        on left: 56 57
        on right: 48 49 56
    addop (63)
        on left: 58 59
        on right: 56
    term (64)
        on left: 60 61
        on right: 56 57 60
    mulop (65)
        on left: 62 63
        on right: 60
    factor (66)
        on left: 64 65 66 67
        on right: 60 61
    call (67)
        on left: 69
        on right: 66
    $@5 (68)
        on left: 68
        on right: 69
    args (69)
        on left: 70 71
        on right: 69
    arg_list (70)
        on left: 72 73
        on right: 70 72


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program    go to state 3
    dcl_list   go to state 4
    dcl        go to state 5
    var_dcl    go to state 6
    prim_dcl   go to state 7
    nv_dcl     go to state 8
    arr_dcl    go to state 9
    type_spec  go to state 10
    fun_dcl    go to state 11


State 1

    8 prim_dcl: INT . ID
   13 type_spec: INT .

    ID  shift, and go to state 12

    ID  [reduce using rule 13 (type_spec)]


State 2

    9 prim_dcl: VOID . ID
   14 type_spec: VOID .

    ID  shift, and go to state 13

    ID  [reduce using rule 14 (type_spec)]


State 3

    0 $accept: program . $end

    $end  shift, and go to state 14


State 4

    1 program: dcl_list .
    2 dcl_list: dcl_list . dcl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    dcl        go to state 15
    var_dcl    go to state 6
    prim_dcl   go to state 7
    nv_dcl     go to state 8
    arr_dcl    go to state 9
    type_spec  go to state 10
    fun_dcl    go to state 11


State 5

    3 dcl_list: dcl .

    $default  reduce using rule 3 (dcl_list)


State 6

    4 dcl: var_dcl .

    $default  reduce using rule 4 (dcl)


State 7

   10 nv_dcl: prim_dcl .
   12 arr_dcl: prim_dcl . LBRACE NUM $@1 RBRACE

    LBRACE  shift, and go to state 16

    $default  reduce using rule 10 (nv_dcl)


State 8

    6 var_dcl: nv_dcl . SEMI

    SEMI  shift, and go to state 17


State 9

    7 var_dcl: arr_dcl . SEMI

    SEMI  shift, and go to state 18


State 10

   16 fun_dcl: type_spec . ID $@2 LPAREN params RPAREN cmpnd_stmt

    ID  shift, and go to state 19


State 11

    5 dcl: fun_dcl .

    $default  reduce using rule 5 (dcl)


State 12

    8 prim_dcl: INT ID .

    $default  reduce using rule 8 (prim_dcl)


State 13

    9 prim_dcl: VOID ID .

    $default  reduce using rule 9 (prim_dcl)


State 14

    0 $accept: program $end .

    $default  accept


State 15

    2 dcl_list: dcl_list dcl .

    $default  reduce using rule 2 (dcl_list)


State 16

   12 arr_dcl: prim_dcl LBRACE . NUM $@1 RBRACE

    NUM  shift, and go to state 20


State 17

    6 var_dcl: nv_dcl SEMI .

    $default  reduce using rule 6 (var_dcl)


State 18

    7 var_dcl: arr_dcl SEMI .

    $default  reduce using rule 7 (var_dcl)


State 19

   16 fun_dcl: type_spec ID . $@2 LPAREN params RPAREN cmpnd_stmt

    $default  reduce using rule 15 ($@2)

    $@2  go to state 21


State 20

   12 arr_dcl: prim_dcl LBRACE NUM . $@1 RBRACE

    $default  reduce using rule 11 ($@1)

    $@1  go to state 22


State 21

   16 fun_dcl: type_spec ID $@2 . LPAREN params RPAREN cmpnd_stmt

    LPAREN  shift, and go to state 23


State 22

   12 arr_dcl: prim_dcl LBRACE NUM $@1 . RBRACE

    RBRACE  shift, and go to state 24


State 23

   16 fun_dcl: type_spec ID $@2 LPAREN . params RPAREN cmpnd_stmt

    INT   shift, and go to state 25
    VOID  shift, and go to state 26

    type_spec   go to state 27
    params      go to state 28
    param_list  go to state 29
    param       go to state 30


State 24

   12 arr_dcl: prim_dcl LBRACE NUM $@1 RBRACE .

    $default  reduce using rule 12 (arr_dcl)


State 25

   13 type_spec: INT .

    $default  reduce using rule 13 (type_spec)


State 26

   14 type_spec: VOID .
   18 params: VOID .

    RPAREN    reduce using rule 18 (params)
    $default  reduce using rule 14 (type_spec)


State 27

   21 param: type_spec . ID
   23      | type_spec . ID $@3 LBRACE RBRACE

    ID  shift, and go to state 31


State 28

   16 fun_dcl: type_spec ID $@2 LPAREN params . RPAREN cmpnd_stmt

    RPAREN  shift, and go to state 32


State 29

   17 params: param_list .
   19 param_list: param_list . COMMA param

    COMMA  shift, and go to state 33

    $default  reduce using rule 17 (params)


State 30

   20 param_list: param .

    $default  reduce using rule 20 (param_list)


State 31

   21 param: type_spec ID .
   23      | type_spec ID . $@3 LBRACE RBRACE

    LBRACE    reduce using rule 22 ($@3)
    $default  reduce using rule 21 (param)

    $@3  go to state 34


State 32

   16 fun_dcl: type_spec ID $@2 LPAREN params RPAREN . cmpnd_stmt

    LCURLY  shift, and go to state 35

    cmpnd_stmt  go to state 36


State 33

   19 param_list: param_list COMMA . param

    INT   shift, and go to state 25
    VOID  shift, and go to state 37

    type_spec  go to state 27
    param      go to state 38


State 34

   23 param: type_spec ID $@3 . LBRACE RBRACE

    LBRACE  shift, and go to state 39


State 35

   24 cmpnd_stmt: LCURLY . local_dcls stmt_list RCURLY

    $default  reduce using rule 26 (local_dcls)

    local_dcls  go to state 40


State 36

   16 fun_dcl: type_spec ID $@2 LPAREN params RPAREN cmpnd_stmt .

    $default  reduce using rule 16 (fun_dcl)


State 37

   14 type_spec: VOID .

    $default  reduce using rule 14 (type_spec)


State 38

   19 param_list: param_list COMMA param .

    $default  reduce using rule 19 (param_list)


State 39

   23 param: type_spec ID $@3 LBRACE . RBRACE

    RBRACE  shift, and go to state 41


State 40

   24 cmpnd_stmt: LCURLY local_dcls . stmt_list RCURLY
   25 local_dcls: local_dcls . var_dcl

    IF      shift, and go to state 42
    RETURN  shift, and go to state 43
    WHILE   shift, and go to state 44
    INT     shift, and go to state 45
    VOID    shift, and go to state 46
    LPAREN  shift, and go to state 47
    LCURLY  shift, and go to state 35
    SEMI    shift, and go to state 48
    ID      shift, and go to state 49
    NUM     shift, and go to state 50

    $default  reduce using rule 28 (stmt_list)

    var_dcl      go to state 51
    prim_dcl     go to state 7
    nv_dcl       go to state 8
    arr_dcl      go to state 9
    cmpnd_stmt   go to state 52
    stmt_list    go to state 53
    stmt_list_   go to state 54
    stmt         go to state 55
    exp_stmt     go to state 56
    select_stmt  go to state 57
    iter_stmt    go to state 58
    return_stmt  go to state 59
    exp          go to state 60
    var          go to state 61
    simple_exp   go to state 62
    addt_exp     go to state 63
    term         go to state 64
    factor       go to state 65
    call         go to state 66


State 41

   23 param: type_spec ID $@3 LBRACE RBRACE .

    $default  reduce using rule 23 (param)


State 42

   38 select_stmt: IF . LPAREN exp RPAREN stmt
   39            | IF . LPAREN exp RPAREN stmt ELSE stmt

    LPAREN  shift, and go to state 67


State 43

   41 return_stmt: RETURN . SEMI
   42            | RETURN . exp SEMI

    LPAREN  shift, and go to state 47
    SEMI    shift, and go to state 68
    ID      shift, and go to state 49
    NUM     shift, and go to state 50

    exp         go to state 69
    var         go to state 61
    simple_exp  go to state 62
    addt_exp    go to state 63
    term        go to state 64
    factor      go to state 65
    call        go to state 66


State 44

   40 iter_stmt: WHILE . LPAREN exp RPAREN stmt

    LPAREN  shift, and go to state 70


State 45

    8 prim_dcl: INT . ID

    ID  shift, and go to state 12


State 46

    9 prim_dcl: VOID . ID

    ID  shift, and go to state 13


State 47

   64 factor: LPAREN . exp RPAREN

    LPAREN  shift, and go to state 47
    ID      shift, and go to state 49
    NUM     shift, and go to state 50

    exp         go to state 71
    var         go to state 61
    simple_exp  go to state 62
    addt_exp    go to state 63
    term        go to state 64
    factor      go to state 65
    call        go to state 66


State 48

   37 exp_stmt: SEMI .

    $default  reduce using rule 37 (exp_stmt)


State 49

   45 var: ID .
   47    | ID . $@4 LBRACE exp RBRACE
   69 call: ID . $@5 LPAREN args RPAREN

    LPAREN    reduce using rule 68 ($@5)
    LBRACE    reduce using rule 46 ($@4)
    $default  reduce using rule 45 (var)

    $@4  go to state 72
    $@5  go to state 73


State 50

   67 factor: NUM .

    $default  reduce using rule 67 (factor)


State 51

   25 local_dcls: local_dcls var_dcl .

    $default  reduce using rule 25 (local_dcls)


State 52

   33 stmt: cmpnd_stmt .

    $default  reduce using rule 33 (stmt)


State 53

   24 cmpnd_stmt: LCURLY local_dcls stmt_list . RCURLY

    RCURLY  shift, and go to state 74


State 54

   27 stmt_list: stmt_list_ .
   29 stmt_list_: stmt_list_ . stmt

    IF      shift, and go to state 42
    RETURN  shift, and go to state 43
    WHILE   shift, and go to state 44
    LPAREN  shift, and go to state 47
    LCURLY  shift, and go to state 35
    SEMI    shift, and go to state 48
    ID      shift, and go to state 49
    NUM     shift, and go to state 50

    $default  reduce using rule 27 (stmt_list)

    cmpnd_stmt   go to state 52
    stmt         go to state 75
    exp_stmt     go to state 56
    select_stmt  go to state 57
    iter_stmt    go to state 58
    return_stmt  go to state 59
    exp          go to state 60
    var          go to state 61
    simple_exp   go to state 62
    addt_exp     go to state 63
    term         go to state 64
    factor       go to state 65
    call         go to state 66


State 55

   30 stmt_list_: stmt .

    $default  reduce using rule 30 (stmt_list_)


State 56

   32 stmt: exp_stmt .

    $default  reduce using rule 32 (stmt)


State 57

   31 stmt: select_stmt .

    $default  reduce using rule 31 (stmt)


State 58

   34 stmt: iter_stmt .

    $default  reduce using rule 34 (stmt)


State 59

   35 stmt: return_stmt .

    $default  reduce using rule 35 (stmt)


State 60

   36 exp_stmt: exp . SEMI

    SEMI  shift, and go to state 76


State 61

   43 exp: var . ASSIGN exp
   65 factor: var .

    ASSIGN  shift, and go to state 77

    $default  reduce using rule 65 (factor)


State 62

   44 exp: simple_exp .

    $default  reduce using rule 44 (exp)


State 63

   48 simple_exp: addt_exp . relop addt_exp
   49           | addt_exp .
   56 addt_exp: addt_exp . addop term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    EQ     shift, and go to state 80
    NE     shift, and go to state 81
    LT     shift, and go to state 82
    LE     shift, and go to state 83
    GT     shift, and go to state 84
    GE     shift, and go to state 85

    $default  reduce using rule 49 (simple_exp)

    relop  go to state 86
    addop  go to state 87


State 64

   57 addt_exp: term .
   60 term: term . mulop factor

    TIMES  shift, and go to state 88
    OVER   shift, and go to state 89

    $default  reduce using rule 57 (addt_exp)

    mulop  go to state 90


State 65

   61 term: factor .

    $default  reduce using rule 61 (term)


State 66

   66 factor: call .

    $default  reduce using rule 66 (factor)


State 67

   38 select_stmt: IF LPAREN . exp RPAREN stmt
   39            | IF LPAREN . exp RPAREN stmt ELSE stmt

    LPAREN  shift, and go to state 47
    ID      shift, and go to state 49
    NUM     shift, and go to state 50

    exp         go to state 91
    var         go to state 61
    simple_exp  go to state 62
    addt_exp    go to state 63
    term        go to state 64
    factor      go to state 65
    call        go to state 66


State 68

   41 return_stmt: RETURN SEMI .

    $default  reduce using rule 41 (return_stmt)


State 69

   42 return_stmt: RETURN exp . SEMI

    SEMI  shift, and go to state 92


State 70

   40 iter_stmt: WHILE LPAREN . exp RPAREN stmt

    LPAREN  shift, and go to state 47
    ID      shift, and go to state 49
    NUM     shift, and go to state 50

    exp         go to state 93
    var         go to state 61
    simple_exp  go to state 62
    addt_exp    go to state 63
    term        go to state 64
    factor      go to state 65
    call        go to state 66


State 71

   64 factor: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 94


State 72

   47 var: ID $@4 . LBRACE exp RBRACE

    LBRACE  shift, and go to state 95


State 73

   69 call: ID $@5 . LPAREN args RPAREN

    LPAREN  shift, and go to state 96


State 74

   24 cmpnd_stmt: LCURLY local_dcls stmt_list RCURLY .

    $default  reduce using rule 24 (cmpnd_stmt)


State 75

   29 stmt_list_: stmt_list_ stmt .

    $default  reduce using rule 29 (stmt_list_)


State 76

   36 exp_stmt: exp SEMI .

    $default  reduce using rule 36 (exp_stmt)


State 77

   43 exp: var ASSIGN . exp

    LPAREN  shift, and go to state 47
    ID      shift, and go to state 49
    NUM     shift, and go to state 50

    exp         go to state 97
    var         go to state 61
    simple_exp  go to state 62
    addt_exp    go to state 63
    term        go to state 64
    factor      go to state 65
    call        go to state 66


State 78

   58 addop: PLUS .

    $default  reduce using rule 58 (addop)


State 79

   59 addop: MINUS .

    $default  reduce using rule 59 (addop)


State 80

   54 relop: EQ .

    $default  reduce using rule 54 (relop)


State 81

   55 relop: NE .

    $default  reduce using rule 55 (relop)


State 82

   51 relop: LT .

    $default  reduce using rule 51 (relop)


State 83

   50 relop: LE .

    $default  reduce using rule 50 (relop)


State 84

   52 relop: GT .

    $default  reduce using rule 52 (relop)


State 85

   53 relop: GE .

    $default  reduce using rule 53 (relop)


State 86

   48 simple_exp: addt_exp relop . addt_exp

    LPAREN  shift, and go to state 47
    ID      shift, and go to state 49
    NUM     shift, and go to state 50

    var       go to state 98
    addt_exp  go to state 99
    term      go to state 64
    factor    go to state 65
    call      go to state 66


State 87

   56 addt_exp: addt_exp addop . term

    LPAREN  shift, and go to state 47
    ID      shift, and go to state 49
    NUM     shift, and go to state 50

    var     go to state 98
    term    go to state 100
    factor  go to state 65
    call    go to state 66


State 88

   62 mulop: TIMES .

    $default  reduce using rule 62 (mulop)


State 89

   63 mulop: OVER .

    $default  reduce using rule 63 (mulop)


State 90

   60 term: term mulop . factor

    LPAREN  shift, and go to state 47
    ID      shift, and go to state 49
    NUM     shift, and go to state 50

    var     go to state 98
    factor  go to state 101
    call    go to state 66


State 91

   38 select_stmt: IF LPAREN exp . RPAREN stmt
   39            | IF LPAREN exp . RPAREN stmt ELSE stmt

    RPAREN  shift, and go to state 102


State 92

   42 return_stmt: RETURN exp SEMI .

    $default  reduce using rule 42 (return_stmt)


State 93

   40 iter_stmt: WHILE LPAREN exp . RPAREN stmt

    RPAREN  shift, and go to state 103


State 94

   64 factor: LPAREN exp RPAREN .

    $default  reduce using rule 64 (factor)


State 95

   47 var: ID $@4 LBRACE . exp RBRACE

    LPAREN  shift, and go to state 47
    ID      shift, and go to state 49
    NUM     shift, and go to state 50

    exp         go to state 104
    var         go to state 61
    simple_exp  go to state 62
    addt_exp    go to state 63
    term        go to state 64
    factor      go to state 65
    call        go to state 66


State 96

   69 call: ID $@5 LPAREN . args RPAREN

    LPAREN  shift, and go to state 47
    ID      shift, and go to state 49
    NUM     shift, and go to state 50

    $default  reduce using rule 71 (args)

    exp         go to state 105
    var         go to state 61
    simple_exp  go to state 62
    addt_exp    go to state 63
    term        go to state 64
    factor      go to state 65
    call        go to state 66
    args        go to state 106
    arg_list    go to state 107


State 97

   43 exp: var ASSIGN exp .

    $default  reduce using rule 43 (exp)


State 98

   65 factor: var .

    $default  reduce using rule 65 (factor)


State 99

   48 simple_exp: addt_exp relop addt_exp .
   56 addt_exp: addt_exp . addop term

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 48 (simple_exp)

    addop  go to state 87


State 100

   56 addt_exp: addt_exp addop term .
   60 term: term . mulop factor

    TIMES  shift, and go to state 88
    OVER   shift, and go to state 89

    $default  reduce using rule 56 (addt_exp)

    mulop  go to state 90


State 101

   60 term: term mulop factor .

    $default  reduce using rule 60 (term)


State 102

   38 select_stmt: IF LPAREN exp RPAREN . stmt
   39            | IF LPAREN exp RPAREN . stmt ELSE stmt

    IF      shift, and go to state 42
    RETURN  shift, and go to state 43
    WHILE   shift, and go to state 44
    LPAREN  shift, and go to state 47
    LCURLY  shift, and go to state 35
    SEMI    shift, and go to state 48
    ID      shift, and go to state 49
    NUM     shift, and go to state 50

    cmpnd_stmt   go to state 52
    stmt         go to state 108
    exp_stmt     go to state 56
    select_stmt  go to state 57
    iter_stmt    go to state 58
    return_stmt  go to state 59
    exp          go to state 60
    var          go to state 61
    simple_exp   go to state 62
    addt_exp     go to state 63
    term         go to state 64
    factor       go to state 65
    call         go to state 66


State 103

   40 iter_stmt: WHILE LPAREN exp RPAREN . stmt

    IF      shift, and go to state 42
    RETURN  shift, and go to state 43
    WHILE   shift, and go to state 44
    LPAREN  shift, and go to state 47
    LCURLY  shift, and go to state 35
    SEMI    shift, and go to state 48
    ID      shift, and go to state 49
    NUM     shift, and go to state 50

    cmpnd_stmt   go to state 52
    stmt         go to state 109
    exp_stmt     go to state 56
    select_stmt  go to state 57
    iter_stmt    go to state 58
    return_stmt  go to state 59
    exp          go to state 60
    var          go to state 61
    simple_exp   go to state 62
    addt_exp     go to state 63
    term         go to state 64
    factor       go to state 65
    call         go to state 66


State 104

   47 var: ID $@4 LBRACE exp . RBRACE

    RBRACE  shift, and go to state 110


State 105

   73 arg_list: exp .

    $default  reduce using rule 73 (arg_list)


State 106

   69 call: ID $@5 LPAREN args . RPAREN

    RPAREN  shift, and go to state 111


State 107

   70 args: arg_list .
   72 arg_list: arg_list . COMMA exp

    COMMA  shift, and go to state 112

    $default  reduce using rule 70 (args)


State 108

   38 select_stmt: IF LPAREN exp RPAREN stmt .
   39            | IF LPAREN exp RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 113

    $default  reduce using rule 38 (select_stmt)


State 109

   40 iter_stmt: WHILE LPAREN exp RPAREN stmt .

    $default  reduce using rule 40 (iter_stmt)


State 110

   47 var: ID $@4 LBRACE exp RBRACE .

    $default  reduce using rule 47 (var)


State 111

   69 call: ID $@5 LPAREN args RPAREN .

    $default  reduce using rule 69 (call)


State 112

   72 arg_list: arg_list COMMA . exp

    LPAREN  shift, and go to state 47
    ID      shift, and go to state 49
    NUM     shift, and go to state 50

    exp         go to state 114
    var         go to state 61
    simple_exp  go to state 62
    addt_exp    go to state 63
    term        go to state 64
    factor      go to state 65
    call        go to state 66


State 113

   39 select_stmt: IF LPAREN exp RPAREN stmt ELSE . stmt

    IF      shift, and go to state 42
    RETURN  shift, and go to state 43
    WHILE   shift, and go to state 44
    LPAREN  shift, and go to state 47
    LCURLY  shift, and go to state 35
    SEMI    shift, and go to state 48
    ID      shift, and go to state 49
    NUM     shift, and go to state 50

    cmpnd_stmt   go to state 52
    stmt         go to state 115
    exp_stmt     go to state 56
    select_stmt  go to state 57
    iter_stmt    go to state 58
    return_stmt  go to state 59
    exp          go to state 60
    var          go to state 61
    simple_exp   go to state 62
    addt_exp     go to state 63
    term         go to state 64
    factor       go to state 65
    call         go to state 66


State 114

   72 arg_list: arg_list COMMA exp .

    $default  reduce using rule 72 (arg_list)


State 115

   39 select_stmt: IF LPAREN exp RPAREN stmt ELSE stmt .

    $default  reduce using rule 39 (select_stmt)
