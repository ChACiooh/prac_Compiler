State 36 충돌: 1 쉬프트/리듀스
State 108 충돌: 1 쉬프트/리듀스


문법

    0 $accept: program $end

    1 program: dcl_list

    2 dcl_list: dcl_list dcl
    3         | dcl

    4 dcl: var_dcl
    5    | fun_dcl
    6    | ERROR

    7 $@1: %empty

    8 var_dcl: type_spec ID $@1 SEMI

    9 $@2: %empty

   10 var_dcl: type_spec ID $@2 LBRACE NUM RBRACE SEMI

   11 type_spec: INT
   12          | VOID
   13          | ERROR

   14 $@3: %empty

   15 fun_dcl: type_spec ID $@3 LPAREN params RPAREN cmpnd_stmt

   16 params: param_list
   17       | VOID

   18 param_list: param_list COMMA param
   19           | param

   20 param: type_spec ID

   21 $@4: %empty

   22 param: type_spec ID $@4 LBRACE RBRACE

   23 cmpnd_stmt: LCURLY local_dcls stmt_list RCURLY

   24 local_dcls: local_dcls var_dcl
   25           | %empty

   26 stmt_list: stmt_list SEMI stmt
   27          | stmt
   28          | %empty

   29 stmt: select_stmt
   30     | ns_stmt
   31     | ERROR

   32 ns_stmt: exp_stmt
   33        | cmpnd_stmt
   34        | iter_stmt
   35        | return_stmt

   36 exp_stmt: exp SEMI
   37         | SEMI

   38 select_stmt: IF LPAREN exp RPAREN stmt
   39            | IF LPAREN exp RPAREN ns_stmt ELSE stmt

   40 iter_stmt: WHILE LPAREN exp RPAREN stmt

   41 return_stmt: RETURN SEMI
   42            | RETURN exp SEMI

   43 exp: var ASSIGN exp
   44    | simple_exp

   45 var: ID

   46 $@5: %empty

   47 var: ID $@5 LBRACE exp RBRACE

   48 simple_exp: addt_exp relop addt_exp
   49           | addt_exp

   50 relop: LE
   51      | LT
   52      | GT
   53      | GE
   54      | EQ
   55      | NE

   56 addt_exp: addt_exp addop term
   57         | term

   58 addop: PLUS
   59      | MINUS

   60 term: term mulop factor
   61     | factor

   62 mulop: TIMES
   63      | OVER

   64 factor: LPAREN exp RPAREN
   65       | var
   66       | call
   67       | NUM

   68 $@6: %empty

   69 call: ID $@6 LPAREN args RPAREN

   70 args: arg_list
   71     | %empty

   72 arg_list: arg_list COMMA exp
   73         | exp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 38 39
    ELSE (259) 39
    RETURN (260) 41 42
    WHILE (261) 40
    INT (262) 11
    VOID (263) 12 17
    ID (264) 8 10 15 20 22 45 47 69
    NUM (265) 10 67
    TIMES (266) 62
    OVER (267) 63
    PLUS (268) 58
    MINUS (269) 59
    EQ (270) 54
    NE (271) 55
    LT (272) 51
    LE (273) 50
    GT (274) 52
    GE (275) 53
    ASSIGN (276) 43
    LPAREN (277) 15 38 39 40 64 69
    RPAREN (278) 15 38 39 40 64 69
    LBRACE (279) 10 22 47
    RBRACE (280) 10 22 47
    LCURLY (281) 23
    RCURLY (282) 23
    SEMI (283) 8 10 26 36 37 41 42
    COMMA (284) 18 72
    ERROR (285) 6 13 31


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program (32)
        on left: 1
        on right: 0
    dcl_list (33)
        on left: 2 3
        on right: 1 2
    dcl (34)
        on left: 4 5 6
        on right: 2 3
    var_dcl (35)
        on left: 8 10
        on right: 4 24
    $@1 (36)
        on left: 7
        on right: 8
    $@2 (37)
        on left: 9
        on right: 10
    type_spec (38)
        on left: 11 12 13
        on right: 8 10 15 20 22
    fun_dcl (39)
        on left: 15
        on right: 5
    $@3 (40)
        on left: 14
        on right: 15
    params (41)
        on left: 16 17
        on right: 15
    param_list (42)
        on left: 18 19
        on right: 16 18
    param (43)
        on left: 20 22
        on right: 18 19
    $@4 (44)
        on left: 21
        on right: 22
    cmpnd_stmt (45)
        on left: 23
        on right: 15 33
    local_dcls (46)
        on left: 24 25
        on right: 23 24
    stmt_list (47)
        on left: 26 27 28
        on right: 23 26
    stmt (48)
        on left: 29 30 31
        on right: 26 27 38 39 40
    ns_stmt (49)
        on left: 32 33 34 35
        on right: 30 39
    exp_stmt (50)
        on left: 36 37
        on right: 32
    select_stmt (51)
        on left: 38 39
        on right: 29
    iter_stmt (52)
        on left: 40
        on right: 34
    return_stmt (53)
        on left: 41 42
        on right: 35
    exp (54)
        on left: 43 44
        on right: 36 38 39 40 42 43 47 64 72 73
    var (55)
        on left: 45 47
        on right: 43 65
    $@5 (56)
        on left: 46
        on right: 47
    simple_exp (57)
        on left: 48 49
        on right: 44
    relop (58)
        on left: 50 51 52 53 54 55
        on right: 48
    addt_exp (59)
        on left: 56 57
        on right: 48 49 56
    addop (60)
        on left: 58 59
        on right: 56
    term (61)
        on left: 60 61
        on right: 56 57 60
    mulop (62)
        on left: 62 63
        on right: 60
    factor (63)
        on left: 64 65 66 67
        on right: 60 61
    call (64)
        on left: 69
        on right: 66
    $@6 (65)
        on left: 68
        on right: 69
    args (66)
        on left: 70 71
        on right: 69
    arg_list (67)
        on left: 72 73
        on right: 70 72


State 0

    0 $accept: . program $end

    INT    shift, and go to state 1
    VOID   shift, and go to state 2
    ERROR  shift, and go to state 3

    program    go to state 4
    dcl_list   go to state 5
    dcl        go to state 6
    var_dcl    go to state 7
    type_spec  go to state 8
    fun_dcl    go to state 9


State 1

   11 type_spec: INT .

    $default  reduce using rule 11 (type_spec)


State 2

   12 type_spec: VOID .

    $default  reduce using rule 12 (type_spec)


State 3

    6 dcl: ERROR .
   13 type_spec: ERROR .

    ID        reduce using rule 13 (type_spec)
    $default  reduce using rule 6 (dcl)


State 4

    0 $accept: program . $end

    $end  shift, and go to state 10


State 5

    1 program: dcl_list .
    2 dcl_list: dcl_list . dcl

    INT    shift, and go to state 1
    VOID   shift, and go to state 2
    ERROR  shift, and go to state 3

    $default  reduce using rule 1 (program)

    dcl        go to state 11
    var_dcl    go to state 7
    type_spec  go to state 8
    fun_dcl    go to state 9


State 6

    3 dcl_list: dcl .

    $default  reduce using rule 3 (dcl_list)


State 7

    4 dcl: var_dcl .

    $default  reduce using rule 4 (dcl)


State 8

    8 var_dcl: type_spec . ID $@1 SEMI
   10        | type_spec . ID $@2 LBRACE NUM RBRACE SEMI
   15 fun_dcl: type_spec . ID $@3 LPAREN params RPAREN cmpnd_stmt

    ID  shift, and go to state 12


State 9

    5 dcl: fun_dcl .

    $default  reduce using rule 5 (dcl)


State 10

    0 $accept: program $end .

    $default  accept


State 11

    2 dcl_list: dcl_list dcl .

    $default  reduce using rule 2 (dcl_list)


State 12

    8 var_dcl: type_spec ID . $@1 SEMI
   10        | type_spec ID . $@2 LBRACE NUM RBRACE SEMI
   15 fun_dcl: type_spec ID . $@3 LPAREN params RPAREN cmpnd_stmt

    LPAREN    reduce using rule 14 ($@3)
    LBRACE    reduce using rule 9 ($@2)
    $default  reduce using rule 7 ($@1)

    $@1  go to state 13
    $@2  go to state 14
    $@3  go to state 15


State 13

    8 var_dcl: type_spec ID $@1 . SEMI

    SEMI  shift, and go to state 16


State 14

   10 var_dcl: type_spec ID $@2 . LBRACE NUM RBRACE SEMI

    LBRACE  shift, and go to state 17


State 15

   15 fun_dcl: type_spec ID $@3 . LPAREN params RPAREN cmpnd_stmt

    LPAREN  shift, and go to state 18


State 16

    8 var_dcl: type_spec ID $@1 SEMI .

    $default  reduce using rule 8 (var_dcl)


State 17

   10 var_dcl: type_spec ID $@2 LBRACE . NUM RBRACE SEMI

    NUM  shift, and go to state 19


State 18

   15 fun_dcl: type_spec ID $@3 LPAREN . params RPAREN cmpnd_stmt

    INT    shift, and go to state 1
    VOID   shift, and go to state 20
    ERROR  shift, and go to state 21

    type_spec   go to state 22
    params      go to state 23
    param_list  go to state 24
    param       go to state 25


State 19

   10 var_dcl: type_spec ID $@2 LBRACE NUM . RBRACE SEMI

    RBRACE  shift, and go to state 26


State 20

   12 type_spec: VOID .
   17 params: VOID .

    RPAREN    reduce using rule 17 (params)
    $default  reduce using rule 12 (type_spec)


State 21

   13 type_spec: ERROR .

    $default  reduce using rule 13 (type_spec)


State 22

   20 param: type_spec . ID
   22      | type_spec . ID $@4 LBRACE RBRACE

    ID  shift, and go to state 27


State 23

   15 fun_dcl: type_spec ID $@3 LPAREN params . RPAREN cmpnd_stmt

    RPAREN  shift, and go to state 28


State 24

   16 params: param_list .
   18 param_list: param_list . COMMA param

    COMMA  shift, and go to state 29

    $default  reduce using rule 16 (params)


State 25

   19 param_list: param .

    $default  reduce using rule 19 (param_list)


State 26

   10 var_dcl: type_spec ID $@2 LBRACE NUM RBRACE . SEMI

    SEMI  shift, and go to state 30


State 27

   20 param: type_spec ID .
   22      | type_spec ID . $@4 LBRACE RBRACE

    LBRACE    reduce using rule 21 ($@4)
    $default  reduce using rule 20 (param)

    $@4  go to state 31


State 28

   15 fun_dcl: type_spec ID $@3 LPAREN params RPAREN . cmpnd_stmt

    LCURLY  shift, and go to state 32

    cmpnd_stmt  go to state 33


State 29

   18 param_list: param_list COMMA . param

    INT    shift, and go to state 1
    VOID   shift, and go to state 2
    ERROR  shift, and go to state 21

    type_spec  go to state 22
    param      go to state 34


State 30

   10 var_dcl: type_spec ID $@2 LBRACE NUM RBRACE SEMI .

    $default  reduce using rule 10 (var_dcl)


State 31

   22 param: type_spec ID $@4 . LBRACE RBRACE

    LBRACE  shift, and go to state 35


State 32

   23 cmpnd_stmt: LCURLY . local_dcls stmt_list RCURLY

    $default  reduce using rule 25 (local_dcls)

    local_dcls  go to state 36


State 33

   15 fun_dcl: type_spec ID $@3 LPAREN params RPAREN cmpnd_stmt .

    $default  reduce using rule 15 (fun_dcl)


State 34

   18 param_list: param_list COMMA param .

    $default  reduce using rule 18 (param_list)


State 35

   22 param: type_spec ID $@4 LBRACE . RBRACE

    RBRACE  shift, and go to state 37


State 36

   23 cmpnd_stmt: LCURLY local_dcls . stmt_list RCURLY
   24 local_dcls: local_dcls . var_dcl

    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    INT     shift, and go to state 1
    VOID    shift, and go to state 2
    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43
    LCURLY  shift, and go to state 32
    SEMI    shift, and go to state 44
    ERROR   shift, and go to state 45

    SEMI      [reduce using rule 28 (stmt_list)]
    $default  reduce using rule 28 (stmt_list)

    var_dcl      go to state 46
    type_spec    go to state 47
    cmpnd_stmt   go to state 48
    stmt_list    go to state 49
    stmt         go to state 50
    ns_stmt      go to state 51
    exp_stmt     go to state 52
    select_stmt  go to state 53
    iter_stmt    go to state 54
    return_stmt  go to state 55
    exp          go to state 56
    var          go to state 57
    simple_exp   go to state 58
    addt_exp     go to state 59
    term         go to state 60
    factor       go to state 61
    call         go to state 62


State 37

   22 param: type_spec ID $@4 LBRACE RBRACE .

    $default  reduce using rule 22 (param)


State 38

   38 select_stmt: IF . LPAREN exp RPAREN stmt
   39            | IF . LPAREN exp RPAREN ns_stmt ELSE stmt

    LPAREN  shift, and go to state 63


State 39

   41 return_stmt: RETURN . SEMI
   42            | RETURN . exp SEMI

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43
    SEMI    shift, and go to state 64

    exp         go to state 65
    var         go to state 57
    simple_exp  go to state 58
    addt_exp    go to state 59
    term        go to state 60
    factor      go to state 61
    call        go to state 62


State 40

   40 iter_stmt: WHILE . LPAREN exp RPAREN stmt

    LPAREN  shift, and go to state 66


State 41

   45 var: ID .
   47    | ID . $@5 LBRACE exp RBRACE
   69 call: ID . $@6 LPAREN args RPAREN

    LPAREN    reduce using rule 68 ($@6)
    LBRACE    reduce using rule 46 ($@5)
    $default  reduce using rule 45 (var)

    $@5  go to state 67
    $@6  go to state 68


State 42

   67 factor: NUM .

    $default  reduce using rule 67 (factor)


State 43

   64 factor: LPAREN . exp RPAREN

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    exp         go to state 69
    var         go to state 57
    simple_exp  go to state 58
    addt_exp    go to state 59
    term        go to state 60
    factor      go to state 61
    call        go to state 62


State 44

   37 exp_stmt: SEMI .

    $default  reduce using rule 37 (exp_stmt)


State 45

   13 type_spec: ERROR .
   31 stmt: ERROR .

    ID        reduce using rule 13 (type_spec)
    $default  reduce using rule 31 (stmt)


State 46

   24 local_dcls: local_dcls var_dcl .

    $default  reduce using rule 24 (local_dcls)


State 47

    8 var_dcl: type_spec . ID $@1 SEMI
   10        | type_spec . ID $@2 LBRACE NUM RBRACE SEMI

    ID  shift, and go to state 70


State 48

   33 ns_stmt: cmpnd_stmt .

    $default  reduce using rule 33 (ns_stmt)


State 49

   23 cmpnd_stmt: LCURLY local_dcls stmt_list . RCURLY
   26 stmt_list: stmt_list . SEMI stmt

    RCURLY  shift, and go to state 71
    SEMI    shift, and go to state 72


State 50

   27 stmt_list: stmt .

    $default  reduce using rule 27 (stmt_list)


State 51

   30 stmt: ns_stmt .

    $default  reduce using rule 30 (stmt)


State 52

   32 ns_stmt: exp_stmt .

    $default  reduce using rule 32 (ns_stmt)


State 53

   29 stmt: select_stmt .

    $default  reduce using rule 29 (stmt)


State 54

   34 ns_stmt: iter_stmt .

    $default  reduce using rule 34 (ns_stmt)


State 55

   35 ns_stmt: return_stmt .

    $default  reduce using rule 35 (ns_stmt)


State 56

   36 exp_stmt: exp . SEMI

    SEMI  shift, and go to state 73


State 57

   43 exp: var . ASSIGN exp
   65 factor: var .

    ASSIGN  shift, and go to state 74

    $default  reduce using rule 65 (factor)


State 58

   44 exp: simple_exp .

    $default  reduce using rule 44 (exp)


State 59

   48 simple_exp: addt_exp . relop addt_exp
   49           | addt_exp .
   56 addt_exp: addt_exp . addop term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    EQ     shift, and go to state 77
    NE     shift, and go to state 78
    LT     shift, and go to state 79
    LE     shift, and go to state 80
    GT     shift, and go to state 81
    GE     shift, and go to state 82

    $default  reduce using rule 49 (simple_exp)

    relop  go to state 83
    addop  go to state 84


State 60

   57 addt_exp: term .
   60 term: term . mulop factor

    TIMES  shift, and go to state 85
    OVER   shift, and go to state 86

    $default  reduce using rule 57 (addt_exp)

    mulop  go to state 87


State 61

   61 term: factor .

    $default  reduce using rule 61 (term)


State 62

   66 factor: call .

    $default  reduce using rule 66 (factor)


State 63

   38 select_stmt: IF LPAREN . exp RPAREN stmt
   39            | IF LPAREN . exp RPAREN ns_stmt ELSE stmt

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    exp         go to state 88
    var         go to state 57
    simple_exp  go to state 58
    addt_exp    go to state 59
    term        go to state 60
    factor      go to state 61
    call        go to state 62


State 64

   41 return_stmt: RETURN SEMI .

    $default  reduce using rule 41 (return_stmt)


State 65

   42 return_stmt: RETURN exp . SEMI

    SEMI  shift, and go to state 89


State 66

   40 iter_stmt: WHILE LPAREN . exp RPAREN stmt

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    exp         go to state 90
    var         go to state 57
    simple_exp  go to state 58
    addt_exp    go to state 59
    term        go to state 60
    factor      go to state 61
    call        go to state 62


State 67

   47 var: ID $@5 . LBRACE exp RBRACE

    LBRACE  shift, and go to state 91


State 68

   69 call: ID $@6 . LPAREN args RPAREN

    LPAREN  shift, and go to state 92


State 69

   64 factor: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 93


State 70

    8 var_dcl: type_spec ID . $@1 SEMI
   10        | type_spec ID . $@2 LBRACE NUM RBRACE SEMI

    LBRACE    reduce using rule 9 ($@2)
    $default  reduce using rule 7 ($@1)

    $@1  go to state 13
    $@2  go to state 14


State 71

   23 cmpnd_stmt: LCURLY local_dcls stmt_list RCURLY .

    $default  reduce using rule 23 (cmpnd_stmt)


State 72

   26 stmt_list: stmt_list SEMI . stmt

    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43
    LCURLY  shift, and go to state 32
    SEMI    shift, and go to state 44
    ERROR   shift, and go to state 94

    cmpnd_stmt   go to state 48
    stmt         go to state 95
    ns_stmt      go to state 51
    exp_stmt     go to state 52
    select_stmt  go to state 53
    iter_stmt    go to state 54
    return_stmt  go to state 55
    exp          go to state 56
    var          go to state 57
    simple_exp   go to state 58
    addt_exp     go to state 59
    term         go to state 60
    factor       go to state 61
    call         go to state 62


State 73

   36 exp_stmt: exp SEMI .

    $default  reduce using rule 36 (exp_stmt)


State 74

   43 exp: var ASSIGN . exp

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    exp         go to state 96
    var         go to state 57
    simple_exp  go to state 58
    addt_exp    go to state 59
    term        go to state 60
    factor      go to state 61
    call        go to state 62


State 75

   58 addop: PLUS .

    $default  reduce using rule 58 (addop)


State 76

   59 addop: MINUS .

    $default  reduce using rule 59 (addop)


State 77

   54 relop: EQ .

    $default  reduce using rule 54 (relop)


State 78

   55 relop: NE .

    $default  reduce using rule 55 (relop)


State 79

   51 relop: LT .

    $default  reduce using rule 51 (relop)


State 80

   50 relop: LE .

    $default  reduce using rule 50 (relop)


State 81

   52 relop: GT .

    $default  reduce using rule 52 (relop)


State 82

   53 relop: GE .

    $default  reduce using rule 53 (relop)


State 83

   48 simple_exp: addt_exp relop . addt_exp

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    var       go to state 97
    addt_exp  go to state 98
    term      go to state 60
    factor    go to state 61
    call      go to state 62


State 84

   56 addt_exp: addt_exp addop . term

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    var     go to state 97
    term    go to state 99
    factor  go to state 61
    call    go to state 62


State 85

   62 mulop: TIMES .

    $default  reduce using rule 62 (mulop)


State 86

   63 mulop: OVER .

    $default  reduce using rule 63 (mulop)


State 87

   60 term: term mulop . factor

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    var     go to state 97
    factor  go to state 100
    call    go to state 62


State 88

   38 select_stmt: IF LPAREN exp . RPAREN stmt
   39            | IF LPAREN exp . RPAREN ns_stmt ELSE stmt

    RPAREN  shift, and go to state 101


State 89

   42 return_stmt: RETURN exp SEMI .

    $default  reduce using rule 42 (return_stmt)


State 90

   40 iter_stmt: WHILE LPAREN exp . RPAREN stmt

    RPAREN  shift, and go to state 102


State 91

   47 var: ID $@5 LBRACE . exp RBRACE

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    exp         go to state 103
    var         go to state 57
    simple_exp  go to state 58
    addt_exp    go to state 59
    term        go to state 60
    factor      go to state 61
    call        go to state 62


State 92

   69 call: ID $@6 LPAREN . args RPAREN

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    $default  reduce using rule 71 (args)

    exp         go to state 104
    var         go to state 57
    simple_exp  go to state 58
    addt_exp    go to state 59
    term        go to state 60
    factor      go to state 61
    call        go to state 62
    args        go to state 105
    arg_list    go to state 106


State 93

   64 factor: LPAREN exp RPAREN .

    $default  reduce using rule 64 (factor)


State 94

   31 stmt: ERROR .

    $default  reduce using rule 31 (stmt)


State 95

   26 stmt_list: stmt_list SEMI stmt .

    $default  reduce using rule 26 (stmt_list)


State 96

   43 exp: var ASSIGN exp .

    $default  reduce using rule 43 (exp)


State 97

   65 factor: var .

    $default  reduce using rule 65 (factor)


State 98

   48 simple_exp: addt_exp relop addt_exp .
   56 addt_exp: addt_exp . addop term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 48 (simple_exp)

    addop  go to state 84


State 99

   56 addt_exp: addt_exp addop term .
   60 term: term . mulop factor

    TIMES  shift, and go to state 85
    OVER   shift, and go to state 86

    $default  reduce using rule 56 (addt_exp)

    mulop  go to state 87


State 100

   60 term: term mulop factor .

    $default  reduce using rule 60 (term)


State 101

   38 select_stmt: IF LPAREN exp RPAREN . stmt
   39            | IF LPAREN exp RPAREN . ns_stmt ELSE stmt

    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43
    LCURLY  shift, and go to state 32
    SEMI    shift, and go to state 44
    ERROR   shift, and go to state 94

    cmpnd_stmt   go to state 48
    stmt         go to state 107
    ns_stmt      go to state 108
    exp_stmt     go to state 52
    select_stmt  go to state 53
    iter_stmt    go to state 54
    return_stmt  go to state 55
    exp          go to state 56
    var          go to state 57
    simple_exp   go to state 58
    addt_exp     go to state 59
    term         go to state 60
    factor       go to state 61
    call         go to state 62


State 102

   40 iter_stmt: WHILE LPAREN exp RPAREN . stmt

    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43
    LCURLY  shift, and go to state 32
    SEMI    shift, and go to state 44
    ERROR   shift, and go to state 94

    cmpnd_stmt   go to state 48
    stmt         go to state 109
    ns_stmt      go to state 51
    exp_stmt     go to state 52
    select_stmt  go to state 53
    iter_stmt    go to state 54
    return_stmt  go to state 55
    exp          go to state 56
    var          go to state 57
    simple_exp   go to state 58
    addt_exp     go to state 59
    term         go to state 60
    factor       go to state 61
    call         go to state 62


State 103

   47 var: ID $@5 LBRACE exp . RBRACE

    RBRACE  shift, and go to state 110


State 104

   73 arg_list: exp .

    $default  reduce using rule 73 (arg_list)


State 105

   69 call: ID $@6 LPAREN args . RPAREN

    RPAREN  shift, and go to state 111


State 106

   70 args: arg_list .
   72 arg_list: arg_list . COMMA exp

    COMMA  shift, and go to state 112

    $default  reduce using rule 70 (args)


State 107

   38 select_stmt: IF LPAREN exp RPAREN stmt .

    $default  reduce using rule 38 (select_stmt)


State 108

   30 stmt: ns_stmt .
   39 select_stmt: IF LPAREN exp RPAREN ns_stmt . ELSE stmt

    ELSE  shift, and go to state 113

    ELSE      [reduce using rule 30 (stmt)]
    $default  reduce using rule 30 (stmt)


State 109

   40 iter_stmt: WHILE LPAREN exp RPAREN stmt .

    $default  reduce using rule 40 (iter_stmt)


State 110

   47 var: ID $@5 LBRACE exp RBRACE .

    $default  reduce using rule 47 (var)


State 111

   69 call: ID $@6 LPAREN args RPAREN .

    $default  reduce using rule 69 (call)


State 112

   72 arg_list: arg_list COMMA . exp

    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43

    exp         go to state 114
    var         go to state 57
    simple_exp  go to state 58
    addt_exp    go to state 59
    term        go to state 60
    factor      go to state 61
    call        go to state 62


State 113

   39 select_stmt: IF LPAREN exp RPAREN ns_stmt ELSE . stmt

    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    ID      shift, and go to state 41
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 43
    LCURLY  shift, and go to state 32
    SEMI    shift, and go to state 44
    ERROR   shift, and go to state 94

    cmpnd_stmt   go to state 48
    stmt         go to state 115
    ns_stmt      go to state 51
    exp_stmt     go to state 52
    select_stmt  go to state 53
    iter_stmt    go to state 54
    return_stmt  go to state 55
    exp          go to state 56
    var          go to state 57
    simple_exp   go to state 58
    addt_exp     go to state 59
    term         go to state 60
    factor       go to state 61
    call         go to state 62


State 114

   72 arg_list: arg_list COMMA exp .

    $default  reduce using rule 72 (arg_list)


State 115

   39 select_stmt: IF LPAREN exp RPAREN ns_stmt ELSE stmt .

    $default  reduce using rule 39 (select_stmt)
